{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport debounce from '../utils/debounce';\nimport withStyles from '../styles/withStyles';\nimport isMuiElement from '../utils/isMuiElement';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    boxSizing: 'border-box',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the `div` element that wraps the children. */\n  tile: {\n    position: 'relative',\n    display: 'block',\n    // In case it's not rendered with a div.\n    height: '100%',\n    overflow: 'hidden'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullHeight: {\n    height: '100%',\n    transform: 'translateX(-50%)',\n    position: 'relative',\n    left: '50%'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullWidth: {\n    width: '100%',\n    position: 'relative',\n    transform: 'translateY(-50%)',\n    top: '50%'\n  }\n};\n\nvar fit = function fit(imgEl, classes) {\n  if (!imgEl || !imgEl.complete) {\n    return;\n  }\n\n  if (imgEl.width / imgEl.height > imgEl.parentElement.offsetWidth / imgEl.parentElement.offsetHeight) {\n    var _imgEl$classList, _imgEl$classList2;\n\n    (_imgEl$classList = imgEl.classList).remove.apply(_imgEl$classList, _toConsumableArray(classes.imgFullWidth.split(' ')));\n\n    (_imgEl$classList2 = imgEl.classList).add.apply(_imgEl$classList2, _toConsumableArray(classes.imgFullHeight.split(' ')));\n  } else {\n    var _imgEl$classList3, _imgEl$classList4;\n\n    (_imgEl$classList3 = imgEl.classList).remove.apply(_imgEl$classList3, _toConsumableArray(classes.imgFullHeight.split(' ')));\n\n    (_imgEl$classList4 = imgEl.classList).add.apply(_imgEl$classList4, _toConsumableArray(classes.imgFullWidth.split(' ')));\n  }\n};\n\nvar GridListTile = /*#__PURE__*/React.forwardRef(function GridListTile(props, ref) {\n  // cols rows default values are for docs only\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$cols = props.cols,\n      cols = _props$cols === void 0 ? 1 : _props$cols,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$rows = props.rows,\n      rows = _props$rows === void 0 ? 1 : _props$rows,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"cols\", \"component\", \"rows\"]);\n\n  var imgRef = React.useRef(null);\n  React.useEffect(function () {\n    var img = imgRef.current;\n\n    if (!img) {\n      return undefined;\n    }\n\n    var listener;\n\n    if (img.complete) {\n      fit(img, classes);\n    } else {\n      listener = function listener() {\n        fit(img, classes);\n      };\n\n      img.addEventListener('load', listener);\n    }\n\n    return function () {\n      if (listener) {\n        img.removeEventListener('load', listener);\n      }\n    };\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      fit(imgRef.current, classes);\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [classes]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tile\n  }, React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (child.type === 'img' || isMuiElement(child, ['Image'])) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        ref: imgRef\n      });\n    }\n\n    return child;\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridListTile.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Theoretically you can pass any node as children, but the main use case is to pass an img,\n   * in which case GridListTile takes care of making the image \"cover\" available space\n   * (similar to `background-size: cover` or to `object-fit: cover`).\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Width of the tile in number of grid cells.\n   */\n  cols: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the tile in number of grid cells.\n   */\n  rows: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridListTile'\n})(GridListTile);","map":{"version":3,"sources":["C:/Users/sulhk/node_modules/@material-ui/core/esm/GridListTile/GridListTile.js"],"names":["_extends","_objectWithoutProperties","_toConsumableArray","React","PropTypes","clsx","debounce","withStyles","isMuiElement","styles","root","boxSizing","flexShrink","tile","position","display","height","overflow","imgFullHeight","transform","left","imgFullWidth","width","top","fit","imgEl","classes","complete","parentElement","offsetWidth","offsetHeight","_imgEl$classList","_imgEl$classList2","classList","remove","apply","split","add","_imgEl$classList3","_imgEl$classList4","GridListTile","forwardRef","props","ref","children","className","_props$cols","cols","_props$component","component","Component","_props$rows","rows","other","imgRef","useRef","useEffect","img","current","undefined","listener","addEventListener","removeEventListener","handleResize","window","clear","createElement","Children","map","child","isValidElement","type","cloneElement","process","env","NODE_ENV","propTypes","node","object","string","number","elementType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport debounce from '../utils/debounce';\nimport withStyles from '../styles/withStyles';\nimport isMuiElement from '../utils/isMuiElement';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    boxSizing: 'border-box',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the `div` element that wraps the children. */\n  tile: {\n    position: 'relative',\n    display: 'block',\n    // In case it's not rendered with a div.\n    height: '100%',\n    overflow: 'hidden'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullHeight: {\n    height: '100%',\n    transform: 'translateX(-50%)',\n    position: 'relative',\n    left: '50%'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullWidth: {\n    width: '100%',\n    position: 'relative',\n    transform: 'translateY(-50%)',\n    top: '50%'\n  }\n};\n\nvar fit = function fit(imgEl, classes) {\n  if (!imgEl || !imgEl.complete) {\n    return;\n  }\n\n  if (imgEl.width / imgEl.height > imgEl.parentElement.offsetWidth / imgEl.parentElement.offsetHeight) {\n    var _imgEl$classList, _imgEl$classList2;\n\n    (_imgEl$classList = imgEl.classList).remove.apply(_imgEl$classList, _toConsumableArray(classes.imgFullWidth.split(' ')));\n\n    (_imgEl$classList2 = imgEl.classList).add.apply(_imgEl$classList2, _toConsumableArray(classes.imgFullHeight.split(' ')));\n  } else {\n    var _imgEl$classList3, _imgEl$classList4;\n\n    (_imgEl$classList3 = imgEl.classList).remove.apply(_imgEl$classList3, _toConsumableArray(classes.imgFullHeight.split(' ')));\n\n    (_imgEl$classList4 = imgEl.classList).add.apply(_imgEl$classList4, _toConsumableArray(classes.imgFullWidth.split(' ')));\n  }\n};\n\nvar GridListTile = /*#__PURE__*/React.forwardRef(function GridListTile(props, ref) {\n  // cols rows default values are for docs only\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$cols = props.cols,\n      cols = _props$cols === void 0 ? 1 : _props$cols,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$rows = props.rows,\n      rows = _props$rows === void 0 ? 1 : _props$rows,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"cols\", \"component\", \"rows\"]);\n\n  var imgRef = React.useRef(null);\n  React.useEffect(function () {\n    var img = imgRef.current;\n\n    if (!img) {\n      return undefined;\n    }\n\n    var listener;\n\n    if (img.complete) {\n      fit(img, classes);\n    } else {\n      listener = function listener() {\n        fit(img, classes);\n      };\n\n      img.addEventListener('load', listener);\n    }\n\n    return function () {\n      if (listener) {\n        img.removeEventListener('load', listener);\n      }\n    };\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      fit(imgRef.current, classes);\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [classes]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tile\n  }, React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (child.type === 'img' || isMuiElement(child, ['Image'])) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        ref: imgRef\n      });\n    }\n\n    return child;\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridListTile.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Theoretically you can pass any node as children, but the main use case is to pass an img,\n   * in which case GridListTile takes care of making the image \"cover\" available space\n   * (similar to `background-size: cover` or to `object-fit: cover`).\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Width of the tile in number of grid cells.\n   */\n  cols: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the tile in number of grid cells.\n   */\n  rows: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridListTile'\n})(GridListTile);"]},"metadata":{},"sourceType":"module"}